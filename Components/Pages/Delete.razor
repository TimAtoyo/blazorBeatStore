@page "/delete/{id:int}"
@inject IBeatService bs
@rendermode InteractiveServer
@inject NavigationManager NM

<div class="container my-40">
    <h3 class="text-xl font-bold mb-4">Delete Beat</h3>

    <div class="grid grid-cols-2 gap-5">
        <div class="form-group">
            <label class="mb-2" for="Title">Title</label>
            <InputText id="Title" class="form-control" @bind-Value="beat.Title" disabled />
        </div>

        <div class="form-group">
            <label class="mb-2" for="Description">Description</label>
            <InputText id="Description" class="form-control" @bind-Value="beat.Description" disabled />
        </div>

        <div class="form-group">
            <label class="mb-2" for="Genre">Genre</label>
            <InputText id="Genre" class="form-control" @bind-Value="beat.Genre" disabled />
        </div>

        <div class="form-group">
            <label class="mb-2" for="Price">Price</label>
            <InputNumber id="Price" class="form-control" @bind-Value="beat.Price" disabled />
        </div>

        <div class="form-group">
            <label class="mb-2" for="UploadedBy">Uploaded By</label>
            <InputNumber id="UploadedBy" class="form-control" @bind-Value="beat.UploadedBy" disabled />
        </div>

        <div class="form-group">
            <label class="mb-2" for="GenreId">Genre Id</label>
            <InputNumber id="GenreId" class="form-control" @bind-Value="beat.GenreId" disabled />
        </div>

        <div class="form-group">
            <label class="mb-2" for="Bpm">BPM</label>
            <InputNumber id="Bpm" class="form-control" @bind-Value="beat.Bpm" disabled />
        </div>
    </div>

    <div class="flex justify-between mt-5">
        <button @onclick="CancelDelete" class="btn btn-secondary">Cancel</button>
        <button @onclick="HandleDelete" class="btn btn-danger">Confirm Delete</button>
    </div>
</div>

@code {
    [Parameter]
    public int id { get; set; }

    private Beat beat = new();

    protected override async Task OnInitializedAsync()
    {
        beat = await bs.GetBeatByIdAsync(id);
    }

    private async Task HandleDelete()
    {
        if (beat != null)
        {
            await bs.DeleteBeatAsync(id);
            NM.NavigateTo("/", true);  
        }
    }

    private void CancelDelete()
    {
        NM.NavigateTo("/", true);
        }
}
